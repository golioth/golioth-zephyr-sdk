name: Test mimxrt1060

on:
  push:
    branches: [ main ]
  pull_request:

  workflow_dispatch:

jobs:
  build_for_hw_test:
    runs-on: ubuntu-latest

    container:
      image: zephyrprojectrtos/ci:v0.24.2

    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.15.0

    steps:
      - uses: actions/checkout@v2
        with:
          path: modules/lib/golioth

      - name: Init and update west
        run: |
          mkdir -p .west
          cat <<EOF > .west/config
          [manifest]
          path = modules/lib/golioth
          file = west-zephyr.yml
          EOF

          west update -o=--depth=1 -n
          west patch --apply

      - name: Build samples/test
        run: |
          cd modules/lib/golioth/samples/test
          west build -b mimxrt1060_evkb . -p

      - name: Create build tarball
        run: |
          cd modules/lib/golioth/samples/test
          tar czf build.tar.gz build/zephyr/zephyr.bin

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: build.tar.gz
          path: modules/lib/golioth/samples/test/build.tar.gz

  # Assumptions made about the self-hosted runner:
  #
  #  1. Has installed the GitHub Actions self-hosted runner service
  #  2. Has installed JLink software
  #  3. Has an environment variable defined for the serial port: CI_MIMXRT1060_PORT
  #  4. Has credentials defined in the file $HOME/credentials_mimxrt1060.yml
  #  5. Has an environment variabled defined for the JTAG serial number of the mimxrt1060_evkb.
  #
  # It is the responsibility of the self-hosted runner admin to ensure
  # these pre-conditions are met.
  #
  # For item 1, GitHub provides instructions when you add a new self-hosted runner
  # in Settings -> Actions -> Runners.
  #
  # For item 2, you'll need to install JLink software:
  #     https://www.segger.com/products/debug-probes/j-link/tools/j-link-software/#j-link-commander
  #
  # For item 3, this environment variable can be added to $HOME/runner_env.sh:
  #   export CI_MIMXRT1060_PORT=/dev/ttyACM0
  #
  # For item 4, the file needs to have contents like:
  #
  # {
  #   "golioth/psk-id": "device@project",
  #   "golioth/psk": "supersecret"
  # }
  #
  # The golioth credentials need to match a device on coap.golioth.dev
  hw_flash_and_test:
    needs: build_for_hw_test
    runs-on: [self-hosted, has_mimxrt1060]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Download build tarball
        uses: actions/download-artifact@v3
        with:
          name: build.tar.gz
          path: samples/test

      - name: Untar
        run: |
          cd samples/test
          tar xvf build.tar.gz

      - name: Copy credentials to samples/test
        run: |
          cp $HOME/credentials_mimxrt1060.yml samples/test/credentials.yml

      - name: Flash and Verify Test Results
        run: |
          cd samples/test
          source $HOME/runner_env.sh
          cat << EOF > commander_script.jlink
          ExitOnError 1
          r
          loadfile "build/zephyr/zephyr.bin" 0x60000000
          r
          g
          writeDP 1 0
          readDP 1
          q
          EOF
          JLinkExe -usb $CI_MIMXRT1060_SNR -nogui 1 -if swd -speed auto -device MIMXRT1062xxx6A -CommanderScript commander_script.jlink -nogui 1
          sleep 3
          python verify.py $CI_MIMXRT1060_PORT
