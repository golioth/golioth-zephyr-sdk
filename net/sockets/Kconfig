#
# Copyright (C) 2022-2023 Golioth, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

config NET_SOCKETS_OFFLOAD_POLL_WRAPPER
	bool "Socket offload poll() wrapper"
	depends on NET_SOCKETS_OFFLOAD
	help
	  Wrapper around offloaded Zephyr sockets, which utilizes a dedicated
	  thread to execute interruptible poll() system call.

	  Enable when communicating with Golioth over offloaded sockets, which
	  return -EXDEV from ioctl(fd, ZFD_IOCTL_POLL_OFFLOAD, ...) and instead
	  implement ioctl(fd, ZFD_IOCTL_POLL_OFFLOAD, ...) system call.

if NET_SOCKETS_OFFLOAD_POLL_WRAPPER

config NET_SOCKETS_OFFLOAD_POLL_WRAPPER_SOCKET_PRIORITY
	int "Socket processing priority"
	default 10
	help
	  Processing priority for sockets implementation. This value should be
	  lower than offloaded sockets priority, which should be wrapped.

	  See NET_SOCKETS_PRIORITY_DEFAULT help for details.

config NET_SOCKETS_OFFLOAD_POLL_WRAPPER_THREAD_STACK_SIZE
	int "Stack size of thread calling poll()"
	default 1024
	help
	  Defines stack size of background thread calling poll() on offloaded
	  socket.

config NET_SOCKETS_OFFLOAD_POLL_WRAPPER_THREAD_PRIORITY
	int "Priority of thread calling poll()"
	default -2 if !PREEMPT_ENABLED
	default 0
	help
	  Priority of helper thread calling poll().

config NET_SOCKETS_OFFLOAD_POLL_WRAPPER_CONTEXT_MAX
	int "Maximum number of dispatcher sockets created"
	default POSIX_MAX_FDS
	help
	  Maximum number of offloaded sockets with poll() executed in dedicated
	  thread. This allocates and creates threads for each of those. Note
	  that all sockets that use this capability at any time count into this
	  limit, as there is no garbage collection or reusing of unused wrapper
	  threads.

endif # NET_SOCKETS_OFFLOAD_POLL_WRAPPER
