From ca07f2acee232958b60117523f0243158f948cd3 Mon Sep 17 00:00:00 2001
From: Marcin Niestroj <m.niestroj@emb.dev>
Date: Wed, 14 Sep 2022 19:41:17 +0200
Subject: [PATCH] twister: support 'attach_serial_after_flash' in hardware map

So far twister attached to serial automatically before flashing device.
This does not work with platforms and runners (e.g. 'esp32' board with
'esp32' runner) that require the same serial port for flashing as it is
used by twister. In such case flashing operation fails due to serial device
being occupied by twister.

Introduce 'attach_serial_after_flash' boolean property in hardware map,
which is 'false' by default. When setting it to 'true' in hardware map,
twister will attach to serial after successful flash operation.

This allows to successfully test esp32 with hello_world:

  $ scripts/twister -p esp32 -T samples/hello_world --device-testing \
    --hardware-map map.yaml

where map.yaml contains:

  attach_serial_after_flash: true

Signed-off-by: Marcin Niestroj <m.niestroj@emb.dev>
---
 scripts/pylib/twister/twisterlib/handlers.py  | 27 +++++++++++++------
 .../pylib/twister/twisterlib/hardwaremap.py   |  4 +++
 scripts/schemas/twister/hwmap-schema.yaml     |  3 +++
 3 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/scripts/pylib/twister/twisterlib/handlers.py b/scripts/pylib/twister/twisterlib/handlers.py
index b7fabb646a..d630033993 100755
--- a/scripts/pylib/twister/twisterlib/handlers.py
+++ b/scripts/pylib/twister/twisterlib/handlers.py
@@ -608,14 +608,15 @@ class DeviceHandler(Handler):
         harness = harness_import.instance
         harness.configure(self.instance)
 
-        try:
-            serial_device.start(harness, self.log, self.options.coverage)
-        except DeviceSerial.SerialError:
-            self.instance.add_missing_case_status("blocked", "Serial Device Error")
-            self.instance.status = "failed"
-            self.instance.reason = "Serial Device Error"
-            self.make_device_available(serial_device.device)
-            return
+        if not hardware.attach_serial_after_flash:
+            try:
+                serial_device.start(harness, self.log, self.options.coverage)
+            except DeviceSerial.SerialError:
+                self.instance.add_missing_case_status("blocked", "Serial Device Error")
+                self.instance.status = "failed"
+                self.instance.reason = "Serial Device Error"
+                self.make_device_available(serial_device.device)
+                return
 
         start_time = time.time()
 
@@ -658,6 +659,16 @@ class DeviceHandler(Handler):
             self.run_custom_script(post_flash_script, 30)
 
         if not flash_error:
+            if hardware.attach_serial_after_flash:
+                try:
+                    serial_device.start(harness, self.log, self.options.coverage)
+                except DeviceSerial.SerialError:
+                    self.instance.add_missing_case_status("blocked", "Serial Device Error")
+                    self.instance.status = "failed"
+                    self.instance.reason = "Serial Device Error"
+                    self.make_device_available(serial_device.device)
+                    return
+
             serial_device.stop(self.timeout)
         else:
             # When the flash error is due exceptions,
diff --git a/scripts/pylib/twister/twisterlib/hardwaremap.py b/scripts/pylib/twister/twisterlib/hardwaremap.py
index e87963ac46..4dfbed17f0 100644
--- a/scripts/pylib/twister/twisterlib/hardwaremap.py
+++ b/scripts/pylib/twister/twisterlib/hardwaremap.py
@@ -38,6 +38,7 @@ class DUT(object):
                  id=None,
                  serial=None,
                  serial_baud=None,
+                 attach_serial_after_flash=None,
                  platform=None,
                  product=None,
                  serial_pty=None,
@@ -50,6 +51,7 @@ class DUT(object):
 
         self.serial = serial
         self.baud = serial_baud or 115200
+        self.attach_serial_after_flash = attach_serial_after_flash
         self.platform = platform
         self.serial_pty = serial_pty
         self._counter = Value("i", 0)
@@ -221,6 +223,7 @@ class HardwareMap:
             runner_params = dut.get('runner_params')
             serial_pty = dut.get('serial_pty')
             serial = dut.get('serial')
+            attach_serial_after_flash = dut.get('attach_serial_after_flash')
             baud = dut.get('baud', None)
             product = dut.get('product')
             fixtures = dut.get('fixtures', [])
@@ -235,6 +238,7 @@ class HardwareMap:
                           serial_pty=serial_pty,
                           serial=serial,
                           serial_baud=baud,
+                          attach_serial_after_flash=attach_serial_after_flash,
                           connected=connected,
                           pre_script=pre_script,
                           post_script=post_script,
diff --git a/scripts/schemas/twister/hwmap-schema.yaml b/scripts/schemas/twister/hwmap-schema.yaml
index 2759bb0b32..01e36b5fb9 100644
--- a/scripts/schemas/twister/hwmap-schema.yaml
+++ b/scripts/schemas/twister/hwmap-schema.yaml
@@ -38,6 +38,9 @@ sequence:
       "serial":
         type: str
         required: false
+      "attach_serial_after_flash":
+        type: bool
+        required: false
       "baud":
         type: int
         required: false
-- 
2.39.2

