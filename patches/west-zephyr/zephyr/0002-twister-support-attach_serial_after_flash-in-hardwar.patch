From c4d77aa6b138b1a9bda329d0aabefc1d1778b0f6 Mon Sep 17 00:00:00 2001
From: Marcin Niestroj <m.niestroj@emb.dev>
Date: Wed, 14 Sep 2022 19:41:17 +0200
Subject: [PATCH] twister: support 'attach_serial_after_flash' in hardware map

So far twister attached to serial automatically before flashing device.
This does not work with platforms and runners (e.g. 'esp32_devkitc_wroom'
board with 'esp32' runner) that require the same serial port for flashing
as it is used by twister. In such case flashing operation fails due to
serial device being occupied by twister.

Introduce 'attach_serial_after_flash' boolean property in hardware map,
which is 'false' by default. When setting it to 'true' in hardware map,
twister will attach to serial after successful flash operation.

This allows to successfully test esp32_devkitc_wroom with hello_world:

  $ scripts/twister -p esp32_devkitc_wroom -T samples/hello_world --device-testing \
    --hardware-map map.yaml

where map.yaml contains:

  attach_serial_after_flash: true

Signed-off-by: Marcin Niestroj <m.niestroj@emb.dev>
---
 scripts/pylib/twister/twisterlib/handlers.py  | 27 +++++++++++++------
 .../pylib/twister/twisterlib/hardwaremap.py   |  4 +++
 scripts/schemas/twister/hwmap-schema.yaml     |  3 +++
 3 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/scripts/pylib/twister/twisterlib/handlers.py b/scripts/pylib/twister/twisterlib/handlers.py
index 3c5e53b029..a7b2ea9b65 100755
--- a/scripts/pylib/twister/twisterlib/handlers.py
+++ b/scripts/pylib/twister/twisterlib/handlers.py
@@ -617,14 +617,15 @@ class DeviceHandler(Handler):
         if pre_script:
             self.run_custom_script(pre_script, 30)
 
-        try:
-            serial_device.start(harness, self.log, self.options.coverage)
-        except DeviceSerial.SerialError:
-            self.instance.add_missing_case_status("blocked", "Serial Device Error")
-            self.instance.status = "failed"
-            self.instance.reason = "Serial Device Error"
-            self.make_device_available(serial_device.device)
-            return
+        if not hardware.attach_serial_after_flash:
+            try:
+                serial_device.start(harness, self.log, self.options.coverage)
+            except DeviceSerial.SerialError:
+                self.instance.add_missing_case_status("blocked", "Serial Device Error")
+                self.instance.status = "failed"
+                self.instance.reason = "Serial Device Error"
+                self.make_device_available(serial_device.device)
+                return
 
         start_time = time.time()
 
@@ -667,6 +668,16 @@ class DeviceHandler(Handler):
             self.run_custom_script(post_flash_script, 30)
 
         if not flash_error:
+            if hardware.attach_serial_after_flash:
+                try:
+                    serial_device.start(harness, self.log, self.options.coverage)
+                except DeviceSerial.SerialError:
+                    self.instance.add_missing_case_status("blocked", "Serial Device Error")
+                    self.instance.status = "failed"
+                    self.instance.reason = "Serial Device Error"
+                    self.make_device_available(serial_device.device)
+                    return
+
             # Always wait at most the test timeout here after flashing.
             serial_device.stop(self.timeout)
         else:
diff --git a/scripts/pylib/twister/twisterlib/hardwaremap.py b/scripts/pylib/twister/twisterlib/hardwaremap.py
index 5e90b7c84c..e8167035a8 100644
--- a/scripts/pylib/twister/twisterlib/hardwaremap.py
+++ b/scripts/pylib/twister/twisterlib/hardwaremap.py
@@ -39,6 +39,7 @@ class DUT(object):
                  id=None,
                  serial=None,
                  serial_baud=None,
+                 attach_serial_after_flash=None,
                  platform=None,
                  product=None,
                  serial_pty=None,
@@ -53,6 +54,7 @@ class DUT(object):
 
         self.serial = serial
         self.baud = serial_baud or 115200
+        self.attach_serial_after_flash = attach_serial_after_flash
         self.platform = platform
         self.serial_pty = serial_pty
         self._counter = Value("i", 0)
@@ -235,6 +237,7 @@ class HardwareMap:
             runner_params = dut.get('runner_params')
             serial_pty = dut.get('serial_pty')
             serial = dut.get('serial')
+            attach_serial_after_flash = dut.get('attach_serial_after_flash')
             baud = dut.get('baud', None)
             product = dut.get('product')
             fixtures = dut.get('fixtures', [])
@@ -249,6 +252,7 @@ class HardwareMap:
                           serial_pty=serial_pty,
                           serial=serial,
                           serial_baud=baud,
+                          attach_serial_after_flash=attach_serial_after_flash,
                           connected=connected,
                           pre_script=pre_script,
                           post_script=post_script,
diff --git a/scripts/schemas/twister/hwmap-schema.yaml b/scripts/schemas/twister/hwmap-schema.yaml
index 3ecb064ddf..6e79b5da97 100644
--- a/scripts/schemas/twister/hwmap-schema.yaml
+++ b/scripts/schemas/twister/hwmap-schema.yaml
@@ -38,6 +38,9 @@ sequence:
       "serial":
         type: str
         required: false
+      "attach_serial_after_flash":
+        type: bool
+        required: false
       "baud":
         type: int
         required: false
-- 
2.40.1

