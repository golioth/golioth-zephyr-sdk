image: zephyrprojectrtos/ci:v0.26.4

variables:
  MODULE_PATH: modules/lib/golioth
  WEST_MANIFEST: .ci-west-zephyr.yml

.west-init: &west-init
  - rm -rf .west $MODULE_PATH
  - west init -m $CI_REPOSITORY_URL --mf ${WEST_MANIFEST} --mr $CI_COMMIT_REF_NAME
  - (cd $MODULE_PATH; git checkout $CI_COMMIT_SHA)

.cache-deps: &cache-deps
  key: west-modules
  paths:
    - bootloader
    - modules
    - tools
    - zephyr

stages:
  - cache
  - check
  - build
  - test

.check:
  stage: check
  needs: []
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

.west-prepare:
  variables:
    GIT_STRATEGY: none
  needs: []
  cache:
    <<: *cache-deps
    policy: pull
  before_script:
    - *west-init
    - west update -o=--depth=1 -n
    - git config --global user.email user@git-scm.com
    - git config --global user.name "Git User"
    - west patch

.west-build:
  extends: .west-prepare
  stage: build

cache-deps:
  extends: .west-build
  stage: cache
  cache:
    <<: *cache-deps
    policy: pull-push
  script:
    - rm -rf $MODULE_PATH
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

checkpatch:
  extends: [.check, .west-prepare]
  before_script:
    - *west-init
    - west update $MODULE_PATH
    - >
      west update zephyr -o=--depth=1 -n
  script:
    - cd $MODULE_PATH
    - git fetch
    - CHECKPATCH="../../../zephyr/scripts/checkpatch.pl --color=always --quiet"
    - EXITCODE=0
    - $CHECKPATCH --git origin/$CI_DEFAULT_BRANCH.. || EXITCODE=$?
    - exit $EXITCODE

gitlint:
  extends: .check
  variables:
    GIT_DEPTH: 0
  script:
    - gitlint --commits origin/$CI_DEFAULT_BRANCH..

pre-commit:
  extends: .check
  variables:
    GIT_DEPTH: 0
  script:
    - pip3 install pre-commit
    - |
      CODE=0 # run pre-commit
      for CID in `git rev-list --reverse origin/$CI_DEFAULT_BRANCH..`; do
          git show $CID -s --format='    pre-commit %h ("%s")'
          git checkout -f -q $CID
          pre-commit run --color always --show-diff-on-failure --from-ref $CID^ --to-ref $CID || CODE=$?
      done
      exit $CODE

.twister:
  extends: .west-prepare
  stage: test
  artifacts:
    when: always
    paths:
      - reports/*
      - twister-out/**/*.log
    reports:
      junit: reports/**/twister.xml

#
# Job depends on following environment variables:
# - GOLIOTH_PROJECT_ID: used to setup 'golioth' Python script (in this job script)
# - GOLIOTH_DEVICE_NAME: used by 'golioth' Python script (in tests scripts)
#
# - GOLIOTH_SYSTEM_SERVER_HOST: used to setup 'golioth' Python script (in this job script) and by device firmware
# - GOLIOTH_SYSTEM_SERVER_API_PORT: used to setup 'golioth' Python script (in this job script)
#
# - GOLIOTH_SAMPLE_HARDCODED_PSK_ID: used by device firmware
# - GOLIOTH_SAMPLE_HARDCODED_PSK: used by device firmware
#
# It is also assumed that a self-hosted goliothd is used and there is no authentication required by
# 'golioth' Python script at api URL http://${GOLIOTH_SYSTEM_SERVER_HOST}:${GOLIOTH_SYSTEM_SERVER_API_PORT}.
#
# Project with id ${GOLIOTH_PROJECT_ID} needs to exist and device with ${GOLIOTH_DEVICE_NAME} name
# needs to be provisioned with ${GOLIOTH_SAMPLE_HARDCODED_PSK_ID} and ${GOLIOTH_SAMPLE_HARDCODED_PSK} as
# DTLS credentials.
#
twister-qemu-goliothd:
  extends: .twister
  tags: [dev-tun]
  resource_group: goliothd
  script:
    # Set credentials to goliothd
    - mkdir -p ${HOME}/.golioth
    - |
      cat << EOF > ${HOME}/.golioth/.goliothctl.yaml
      apiurl: http://${GOLIOTH_SYSTEM_SERVER_HOST}:${GOLIOTH_SYSTEM_SERVER_API_PORT}
      projectid: ${GOLIOTH_PROJECT_ID}
      EOF
    # Install samples/tests requirements
    - pip3 install -r modules/lib/golioth/scripts/requirements-tests.txt
    - pip3 install modules/lib/golioth/scripts/python/golioth
    # Start QEMU networking utilities
    - make -C tools/net-tools tunslip6
    - tools/net-tools/loop-socat.sh &
    - sleep 1
    - sudo tools/net-tools/loop-slip-tap.sh &
    - sleep 1
    # Setup port forwarding for external network access and start network traffic recording
    - apt-get update && apt-get install -y iptables tshark
    - modules/lib/golioth/scripts/nat_config.py tap0
    - mkdir -p reports
    - tshark -f 'port 5684' -w reports/traffic.pcapng &
    # Run tests
    - >
      zephyr/scripts/twister
      --force-color
      -vvv
      -t goliothd
      -j 1
      -p qemu_x86
      -o reports
      -T $MODULE_PATH
  artifacts:
    reports:
      junit: reports/**/twister_report.xml

twister:
  extends: .twister
  script:
    - west blobs fetch hal_espressif
    - rm -rf reports twister-out
    # Build and run all non-goliothd samples/tests
    - >
      zephyr/scripts/twister
      --force-color
      --no-clean
      -e goliothd
      -p esp32_devkitc_wroom
      -p nrf52840dk_nrf52840
      -p qemu_x86
      -o reports/non_goliothd
      -T $MODULE_PATH
    # Build-only all goliothd samples/tests
    - >
      zephyr/scripts/twister
      --force-color
      --no-clean
      -t goliothd -b
      -p esp32_devkitc_wroom
      -p nrf52840dk_nrf52840
      -p qemu_x86
      -o reports/goliothd
      -T $MODULE_PATH

twister-ncs:
  extends: .twister
  variables:
    WEST_MANIFEST: west-ncs.yml
  script:
    - >
      zephyr/scripts/twister
      --force-color
      -p nrf9160dk_nrf9160_ns
      -o reports
      -T $MODULE_PATH
